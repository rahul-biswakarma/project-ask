generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              String       @id @default(uuid())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  clerkId         String       @unique
  email           String       @unique
  submissions     Submission[]
  problemsCreated Problem[]
}

model Problem {
  id               String            @id @default(uuid())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  hint             String[]
  problemStatement String
  type             ProblemType
  area             ProblemArea
  difficulty       ProblemDifficulty
  creatorId        String?
  title            String
  testCases        TestCase[]
  submissions      Submission[]
  createdBy        User?             @relation(fields: [creatorId], references: [id], onDelete: SetNull)

  @@unique([creatorId, id])
}

model Submission {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  submissionCode  String
  creatorId       String
  problemId       String
  passedTestCases String[]
  failedTestCases String[]
  createdBy       User     @relation(fields: [creatorId], references: [id])
  problem         Problem  @relation(fields: [problemId], references: [id], onDelete: Cascade)

  @@unique([creatorId, id])
  @@unique([problemId, id])
}

model TestCase {
  id        String   @id @default(uuid())
  input     String
  output    String
  Problem   Problem? @relation(fields: [problemId], references: [id])
  problemId String?

  @@unique([problemId, id])
}

enum ProblemType {
  ARRAY
  SORTING
  PATH_FINDING
  GRAPH
  STRING
  TREE
  LINKED_LIST
  DYNAMIC_PROGRAMMING
  RECURSION
  STACK
  QUEUE
  HEAP
  HASHING
}

enum ProblemArea {
  BANKING
  GAME_DEVELOPMENT
  BASIC
  MOSTLY_USED
  DATA_SCIENCE
  WEB_DEVELOPMENT
  MOBILE_DEVELOPMENT
  NETWORKING
  OPERATING_SYSTEMS
  DATABASES
}

enum ProblemDifficulty {
  EASY
  MEDIUM
  HARD
  VERY_HARD
  EXTREME
}
